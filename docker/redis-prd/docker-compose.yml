networks:
  db-internetwork:
    external: true

services:
  redis-master:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=master
    networks:
      - db-internetwork
    deploy:
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
      replicas: 1
      resources:
        limits:  
          memory: "1G"  
        reservations:
          memory: "512M"
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.database == master

  redis-slave-1:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
    depends_on:
      - redis-master
    networks:
      - db-internetwork
    deploy:
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
      replicas: 1
      resources:
        limits:  
          memory: "2G"  
        reservations:
          memory: "512M"
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.database == master

  # redis-slave-2:
  #   image: bitnami/redis:latest
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - REDIS_REPLICATION_MODE=slave
  #     - REDIS_MASTER_HOST=redis-master
  #   depends_on:
  #     - redis-master
  #   networks:
  #     - db-internetwork
  #   deploy:
  #     update_config:
  #       parallelism: 1
  #       delay: 5s
  #       failure_action: rollback
  #     replicas: 1
  #     resources:
  #       limits:  
  #         memory: "2G"  
  #       reservations:
  #         memory: "512M"
  #     restart_policy:
  #       condition: any
  #     placement:
  #       constraints:
  #         - node.platform.os == linux
  #         - node.labels.database == slave

  redis-sentinel-1:
    image: bitnami/redis-sentinel:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_MASTER_SET=redis-prod
      - REDIS_SENTINEL_QUORUM=2
      - REDIS_SENTINEL_ANNOUNCE_IP=redis-sentinel-1
      - REDIS_SENTINEL_ANNOUNCE_PORT=26379
      - REDIS_MASTER_HOST=redis-master
    depends_on:
      - redis-master
    networks:
      - db-internetwork
    deploy:
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.database == master

  redis-sentinel-2:
    image: bitnami/redis-sentinel:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_MASTER_SET=redis-prod
      - REDIS_SENTINEL_QUORUM=2
      - REDIS_SENTINEL_ANNOUNCE_IP=redis-sentinel-2
      - REDIS_SENTINEL_ANNOUNCE_PORT=26379
      - REDIS_MASTER_HOST=redis-master
    depends_on:
      - redis-master
    networks:
      - db-internetwork
    deploy:
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.database == slave

  # redis-sentinel-3:
  #   image: bitnami/redis-sentinel:latest
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - REDIS_MASTER_SET=redis-prod
  #     - REDIS_SENTINEL_QUORUM=2
  #     - REDIS_SENTINEL_ANNOUNCE_IP=redis-sentinel-3
  #     - REDIS_SENTINEL_ANNOUNCE_PORT=26379
  #     - REDIS_MASTER_HOST=redis-master
  #   depends_on:
  #     - redis-master
  #   networks:
  #     - db-internetwork
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.platform.os == linux
  #         - node.labels.database == slave

  haproxy-redis:
    image: haproxy:latest
    configs:
      - source: redis-haproxy-config
        target: /usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "6379:6379"
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-sentinel-1
      - redis-sentinel-2
    networks:
      - db-internetwork
    deploy:
      placement:
        constraints:
          - node.platform.os == linux
          - node.role == manager

configs:
  redis-haproxy-config:
    external: true
