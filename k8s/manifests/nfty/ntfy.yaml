apiVersion: apps/v1
kind: Deployment
metadata:
  name: ntfy
  namespace: production-external-apps
spec:
  selector:
    matchLabels:
      app: ntfy
  template:
    metadata:
      labels:
        app: ntfy
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
      containers:
      - name: ntfy
        image: binwiederhier/ntfy
        args: ["serve"]
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: config
          mountPath: "/etc/ntfy"
          readOnly: true
        - name: cache
          mountPath: "/var/cache/ntfy"
        env:
        - name: NTFY_BASE_URL
          value: "https://noty.mcb-svc.work"
        - name: NTFY_UPSTREAM_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: ntfy-upstream-access-token-eso
              key: access-token
      volumes:
        - name: config
          configMap:
            name: ntfy-cfm
        - name: cache
          persistentVolumeClaim:
            claimName: ntfy-cache-pvc
---
# Basic service for port 80
apiVersion: v1
kind: Service
metadata:
  name: ntfy-svc
  namespace: production-external-apps
spec:
  selector:
    app: ntfy
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ntfy-cfm
  namespace: production-external-apps
data:
  server.yml: |
    # Template: https://github.com/binwiederhier/ntfy/blob/main/server/server.yml
    base-url: https://noty.mcb-svc.work
    cache-file: "/var/cache/ntfy/cache.db"
    attachment-cache-dir: "/var/cache/ntfy/attachments"
    enable-metrics: true
    log-level: info
    log-format: json
    behind-proxy: true
    auth-file: "/var/cache/ntfy/user.db"
    auth-default-access: "deny-all"
    enable-login: true
    upstream-base-url: "https://ntfy.sh"
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: ntfy-upstream-access-token-eso
  namespace: production-external-apps
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: ntfy-upstream-access-token-eso
    creationPolicy: Owner
  data:
    - secretKey: access-token
      remoteRef:
        key: ntfy-upstream-access-token
        property: access-token
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ntfy-cache-pvc
  namespace: production-external-apps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ntfy-ingress
  namespace: production-external-apps
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`noty.mcb-svc.work`)
      kind: Rule
      services:
        - name: ntfy-svc
          port: 80
          scheme: http
  tls:
    secretName: production-external-app-cert-tls
