namespace: "cert-manager"

crds:
  enabled: true
  keep: true
dns01RecursiveNameserversOnly: true
dns01RecursiveNameservers: "1.1.1.1:53,1.0.0.1:53"

replicaCount: 3
strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
podDisruptionBudget:
  enabled: true
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/instance: cert-manager
        topologyKey: kubernetes.io/hostname
tolerations:
- key: "CriticalAddonsOnly"
  value: "true"
  effect: "NoExecute"
- key: "node-role.kubernetes.io/control-plane"
  operator: "Exists"
  effect: "NoSchedule"
nodeSelector:
  node.cert-manager: "true"

webhook:
  replicaCount: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  podDisruptionBudget:
    enabled: true
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: webhook
              app.kubernetes.io/instance: cert-manager
          topologyKey: kubernetes.io/hostname
  tolerations:
  - key: "CriticalAddonsOnly"
    value: "true"
    effect: "NoExecute"
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  nodeSelector:
    node.cert-manager: "true"

cainjector:
  replicaCount: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  podDisruptionBudget:
    enabled: true
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: cainjector
              app.kubernetes.io/instance: cert-manager
          topologyKey: kubernetes.io/hostname
  tolerations:
  - key: "CriticalAddonsOnly"
    value: "true"
    effect: "NoExecute"
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  nodeSelector:
    node.cert-manager: "true"
